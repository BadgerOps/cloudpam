name: Release Builds

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  # NOTE: This job re-implements the behavior of 'go-release-action' in-line
  # (derived from wangyoucao577/go-release-action) to build and attach
  # per-OS/arch binaries directly to the GitHub Release.
  build-and-upload:
    name: Build and attach binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
      VERSION: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout tag
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Build binary (-tags sqlite)
        run: |
          set -euxo pipefail
          ENTRY=./cmd/cloudpam
          test -d "$ENTRY" || { echo "entrypoint $ENTRY not found"; exit 1; }
          BIN=cloudpam
          EXT=""; [ "$GOOS" = "windows" ] && EXT=".exe"
          OUT="$BIN$EXT"
          mkdir -p build
          echo "Building ${GOOS}/${GOARCH} -> build/${OUT}"
          go build -trimpath -tags sqlite -ldflags "-s -w" -o "build/${OUT}" "$ENTRY"

      - name: Package archive
        run: |
          set -euxo pipefail
          ASSET_BASE="cloudpam_${VERSION}_${GOOS}_${GOARCH}"
          mkdir -p dist
          if [ "$GOOS" = "windows" ]; then
            (cd build && zip -9 "../dist/${ASSET_BASE}.zip" cloudpam.exe)
          else
            tar -C build -czf "dist/${ASSET_BASE}.tar.gz" cloudpam
          fi

      - name: Attach asset to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checksums:
    name: Upload SHA256SUMS
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Download release assets
        uses: robinraju/release-downloader@v1.11
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.event.release.tag_name }}
          fileName: "cloudpam_*"
          out-file-path: downloads
      - name: Generate checksums
        run: |
          cd downloads
          sha256sum * > SHA256SUMS.txt
          ls -la
      - name: Upload checksum to release
        uses: softprops/action-gh-release@v2
        with:
          files: downloads/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sbom:
    name: Upload SBOM (SPDX)
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Checkout tag
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Generate SBOM (SPDX JSON)
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json
      - name: Upload SBOM to release
        uses: softprops/action-gh-release@v2
        with:
          files: sbom.spdx.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
